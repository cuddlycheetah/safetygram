{"version":3,"sources":["./src/app/update/update.page.html","./src/app/update/update.module.ts","./src/app/update/update.page.scss","./src/app/update/update.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,6qB;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACF;AACU;AAEV;AAEF;AACS;AAEpD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAYF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAV5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,+DAAc;aACf;YACD,YAAY,EAAE,CAAC,uDAAU,CAAC;SAC3B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;AC3B7B,+DAA+D,uI;;;;;;;;;;;;;;;;;;;;;;ACAb;AACJ;AACA;AACsB;AAC1B;AACQ;AAOlD;IAEE,oBACS,WAAwB,EACxB,WAAwB,EACvB,IAAgB,EAChB,WAA8B,EAC9B,SAA0B;QAJ3B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACvB,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAmB;QAC9B,cAAS,GAAT,SAAS,CAAiB;IAChC,CAAC;IAEL,6BAAQ,GAAR;IACA,CAAC;IAEK,oCAAe,GAArB;;;;;;4BACkB,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BAC5C,OAAO,EAAE,kBAAkB;4BAC3B,WAAW,EAAE,IAAI;yBAClB,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;wBACxB,WAAW;wBACX,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAC/B,+DAAQ,CAAC,cAAM,cAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAClC;6BACA,SAAS,CAAC,UAAC,GAAQ;4BAClB,KAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;wBACpE,CAAC,CAAC,CAAC;;;;;KACJ;IAEK,kCAAa,GAAnB;;;;;4BACkB,qBAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;4BAC5C,OAAO,EAAE,uBAAuB;4BAChC,WAAW,EAAE,IAAI;yBAClB,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;wBACxB,WAAW;wBACX,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC,IAAI,CAC9C,+DAAQ,CAAC,cAAM,cAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAClC;6BACA,SAAS,CAAC,UAAC,GAAQ;wBAEpB,CAAC,CAAC,CAAC;;;;;KACJ;;gBAtCqB,yDAAW;gBACX,yDAAW;gBACjB,+DAAU;gBACH,gEAAiB;gBACnB,8DAAe;;IAPzB,UAAU;QALtB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,0IAAiC;;SAElC,CAAC;+EAIsB,yDAAW;YACX,yDAAW;YACjB,+DAAU;YACH,gEAAiB;YACnB,8DAAe;OAPzB,UAAU,CA0CtB;IAAD,iBAAC;CAAA;AA1CsB","file":"update-update-module-es5.js","sourcesContent":["module.exports = \"<mat-toolbar-row>\\n  <button [hidden]=\\\"!menuService.mobileQuery.matches\\\" mat-icon-button (click)=\\\"menuService.toggle()\\\">\\n    <mat-icon>menu</mat-icon>\\n  </button>\\n  <h2 i18n=\\\"@@updatesTitle\\\">Updates</h2>\\n</mat-toolbar-row>\\n\\n<ion-content>\\n  <div>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"checkForUpdates()\\\" i18n=\\\"@@updateCheck\\\">\\n      Auf Updates pr√ºfen\\n    </button>\\n  </div>\\n  <div>\\n    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"restartServer()\\\" i18n=\\\"@@updateRestart\\\">\\n      Safetygram Neustarten\\n    </button>\\n  </div>\\n<!--\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n-->\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdatePage } from './update.page';\nimport { MaterialModule } from '../material.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdatePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    MaterialModule\n  ],\n  declarations: [UpdatePage]\n})\nexport class UpdatePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS91cGRhdGUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { MenuService } from '../menu.service';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { finalize } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.page.html',\n  styleUrls: ['./update.page.scss'],\n})\nexport class UpdatePage implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    public menuService: MenuService,\n    private http: HttpClient,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  async checkForUpdates () {\n    const loading = await this.loadingCtrl.create({\n      message: 'Gathering Config',\n      translucent: true,\n    });\n    await loading.present();\n    // STANDARD\n    this.http.get('/api/status').pipe(\n      finalize(() => loading.dismiss())\n    )\n    .subscribe((res: any) => {\n      this.authService.updateAvailableSubject.next(res.updateAvailable);\n    });\n  }\n\n  async restartServer () {\n    const loading = await this.loadingCtrl.create({\n      message: 'Restarting Safetygram',\n      translucent: true,\n    });\n    await loading.present();\n    // STANDARD\n    this.http.post('/api/server/restart', null).pipe(\n      finalize(() => loading.dismiss())\n    )\n    .subscribe((res: any) => {\n\n    });\n  }\n}\n"],"sourceRoot":""}