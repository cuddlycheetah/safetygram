{"version":3,"sources":["./src/app/users/users.page.html","./src/app/users/users.module.ts","./src/app/users/users.page.scss","./src/app/users/users.page.ts"],"names":[],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["module.exports = \"<mat-toolbar-row>\\n  <button [hidden]=\\\"!menuService.mobileQuery.matches\\\" mat-icon-button (click)=\\\"menuService.toggle()\\\">\\n    <mat-icon>menu</mat-icon>\\n  </button>\\n  <h2 translate>users.title</h2>\\n</mat-toolbar-row>\\n  \\n<ion-content>\\n  <mat-form-field style=\\\"width: 100%;\\\">\\n    <button mat-icon-button matSuffix (click)=\\\"searchTerm=''\\\">\\n      <mat-icon>cancel</mat-icon>\\n    </button>\\n    <input matInput [placeholder]=\\\"'users.searchPlaceholder' | translate\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTerm\\\" #searchBar (input)=\\\"filter()\\\">\\n    <button mat-icon-button matPrefix>\\n      <mat-icon>search</mat-icon>\\n    </button>\\n  </mat-form-field>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refreshData($event)\\\">\\n    <ion-refresher-content pullingIcon=\\\"arrow-dropdown\\\" pullingText=\\\"Ziehen zum aktualisieren\\\" refreshingSpinner=\\\"circles\\\" refreshingText=\\\"Aktualisiere...\\\">\\n    </ion-refresher-content>\\n  </ion-refresher>\\n  <mat-nav-list>\\n    <mat-list-item matRipple *ngFor=\\\"let user of filtered\\\" routerDirection=\\\"forward\\\" [routerLink]=\\\"[ user.id ]\\\">\\n      <img matListAvatar *ngIf=\\\"user.chatnamesets.length > 0\\\" [src]=\\\"'/api/file/fetch/' + user.chatnamesets[0].photo\\\">\\n      <h2 matLine>{{ user.usernamesets[0].firstName }} {{ user.usernamesets[0].lastName }}</h2>\\n      <p matLine *ngIf=\\\"user.userinfos.length > 0\\\">{{ user.userinfos[0].bio }}</p>\\n      <p matLine>@{{ user.usernamesets[0].username }}</p>\\n    </mat-list-item>\\n  </mat-nav-list>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsersPage } from './users.page';\nimport { MaterialModule } from '../material.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    MaterialModule\n  ],\n  declarations: [UsersPage]\n})\nexport class UsersPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AlertController, LoadingController, ModalController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { finalize } from 'rxjs/operators';\nimport { MenuService } from '../menu.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.page.html',\n  styleUrls: ['./users.page.scss'],\n})\nexport class UsersPage implements OnInit {\n\n  public users: any[];\n  public filtered: any[];\n  public searchTerm = '';\n\n  constructor(\n    public modalController: ModalController,\n    private http: HttpClient,\n    private loadingCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    public menuService: MenuService,\n    private translate: TranslateService\n  ) { }\n\n\n  ngOnInit() {\n    this.refreshData(null);\n  }\n\n  async refreshData(event) {\n    const loading = await this.loadingCtrl.create({\n      message: this.translate.instant('users.loadingUser'),\n    });\n    await loading.present();\n    this.http.get(`/api/crest/users`).pipe(\n      finalize(() => loading.dismiss())\n    )\n    .subscribe((res: any) => {\n      if (!!res) {\n        this.users = res;\n        this.filter();\n      }\n      if (!!event) {\n        event.target.complete();\n      }\n    });\n  }\n  assignCopy(){\n    this.filtered = Object.assign([], this.users);\n  }\n  filter() {\n    const term = this.searchTerm;\n    if (!term) {\n      this.assignCopy();\n    }\n    this.filtered = Object.assign([], this.users).filter(user => {\n      return `${ user.usernamesets[0].firstName } ${ user.usernamesets[0].lastName } ${ user.usernamesets[0].username }`\n        .toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n}"],"sourceRoot":""}