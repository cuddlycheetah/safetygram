{"version":3,"sources":["./src/app/setup/setup.page.html","./src/app/setup/setup.module.ts","./src/app/setup/setup.page.scss","./src/app/setup/setup.page.ts"],"names":[],"mappings":"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","file":"setup-setup-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Enter your Telegram Account Data</ion-title>\\n    <img style=\\\"max-width: 300px;\\\" src=\\\"/assets/safetygramlogo.png\\\">\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <article #phoneNumberStep [hidden]=\\\"paneIndex!=0\\\">\\n    <form [formGroup]=\\\"phoneNumberGroup\\\">\\n      <mat-form-field>\\n        <input matInput [placeholder]=\\\"'setup.phonenumber' | translate\\\" type=\\\"tel\\\" formControlName=\\\"phoneNumber\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-flat-button (click)=\\\"verifyPhoneNumber()\\\" translate>setup.request.code</button>\\n      </div>\\n    </form>\\n  </article>\\n  <article #codeStep [hidden]=\\\"paneIndex!=1\\\">\\n    <form [formGroup]=\\\"codeGroup\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Code\\\" type=\\\"text\\\" pattern=\\\"[0-9]{5}\\\" formControlName=\\\"code\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button translate>setup.back</button>\\n        <button mat-flat-button (click)=\\\"verifyCode()\\\" translate>setup.request.verify.code</button>\\n      </div>\\n    </form>\\n  </article>\\n  <article #passwordStep [hidden]=\\\"paneIndex!=2\\\">\\n    <form [formGroup]=\\\"passwordGroup\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"'auth.password' | translate\\\" type=\\\"password\\\" formControlName=\\\"password\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button translate>setup.back</button>\\n        <button mat-flat-button (click)=\\\"verifyPassword()\\\" translate>setup.request.verify.password</button>\\n      </div>\\n    </form>\\n  </article>\\n  <article [hidden]=\\\"paneIndex!=3\\\">\\n    <p translate>setup.finished.set_interface_password</p>\\n\\n    <form [formGroup]=\\\"interfacePasswordGroup\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Passwort\\\" formControlName=\\\"password\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-flat-button (click)=\\\"finishSetup()\\\" [disabled]=\\\"interfacePasswordGroup.invalid\\\">Fertig</button>\\n      </div>\\n    </form>\\n  </article>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SetupPage } from './setup.page';\nimport { MaterialModule } from '../material.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SetupPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    MaterialModule\n  ],\n  declarations: [SetupPage]\n})\nexport class SetupPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHVwL3NldHVwLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatStep, MatVerticalStepper } from '@angular/material';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.page.html',\n  styleUrls: ['./setup.page.scss'],\n})\nexport class SetupPage implements OnInit {\n\n  // @ViewChild('stepper', {static: true}) stepper: MatVerticalStepper;\n\n  // @ViewChild('phoneNumberStep', {static: true}) phoneNumberStep: MatStep;\n  // @ViewChild('codeStep', {static: true}) codeStep: MatStep;\n\n  paneIndex = -1;\n\n  phoneNumberGroup: FormGroup;\n  codeGroup: FormGroup;\n  passwordGroup: FormGroup;\n  interfacePasswordGroup: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public authService: AuthService,\n    public router: Router,\n    private translate: TranslateService\n  ) {\n    this.phoneNumberGroup = this.formBuilder.group({\n      phoneNumber: ['', [\n        Validators.required,\n        Validators.pattern(/^\\+(?:[0-9] ?){6,14}[0-9]$/)\n      ]],\n    });\n    this.codeGroup = this.formBuilder.group({\n      code: ['', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(5)\n      ]],\n    });\n    this.passwordGroup = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n    this.interfacePasswordGroup = this.formBuilder.group({\n      password: ['', Validators.required],\n    });\n  }\n\n  async verifyPhoneNumber() {\n    if (this.phoneNumberGroup.invalid) { return false; }\n    const phoneNumber = this.phoneNumberGroup.value.phoneNumber;\n    await this.authService.verifyPhoneNumber(phoneNumber);\n  }\n  async verifyCode() {\n    if (this.codeGroup.invalid) { return false; }\n    const code = this.codeGroup.value.code;\n    await this.authService.verifyCode(code);\n  }\n  async verifyPassword() {\n    if (this.passwordGroup.invalid) { return false; }\n    const password = this.passwordGroup.value.password;\n    await this.authService.verifyPassword(password);\n  }\n  async finishSetup() {\n    if (this.interfacePasswordGroup.invalid) { return false; }\n    const password = this.interfacePasswordGroup.value.password;\n    await this.authService.initPassword(password);\n  }\n  async ngOnInit() {\n    if (this.authService.setupNavOkay.value === false) {\n      this.router.navigateByUrl('/');\n    }\n    this.authService.tgAuthState.subscribe((newState) => {\n      console.log('tgAuth State', newState);\n      switch (newState) {\n        case 'authorizationStateWaitPhoneNumber':\n          this.paneIndex = 0;\n          break;\n          case 'authorizationStateWaitCode':\n            this.paneIndex = 1;\n            break;\n          case 'authorizationStateWaitPassword':\n            this.paneIndex = 2;\n            break;\n          case 'authorizationStateReady':\n            this.paneIndex = 3;\n            break;\n        default:\n          console.warn('unkown tgAuth State', newState);\n          break;\n      }\n    });\n  }\n}\n"],"sourceRoot":""}